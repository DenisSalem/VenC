authors:
- 'Denis Salem'
categories:
- ''
title: Animation de chargement
chapter: '7.5.4.1'
---VENC-BEGIN-PREVIEW---
---VENC-END-PREVIEW---
C'est purement cosmetique mais vous pouvez configurer une animation de chargement
comme expliqué dans le chapitre [3.6.2.2](.:GetChapterAttributeByIndex::path::3.6.2.2:.#footer-html) lorsque
vous utilisze le module JS de défilement infini.

On peut alors ajouter ligne 2, 3 et 4 quelque chose comme :

.:CodeHighlight::HTML::True::        <footer>.:Escape::
              .:GetBlogMetadataIfExists::loading_image::
                  <img id="__VENC_LOADING__" src=".:GetRelativeRoot:.{value}" />
              :.
        :.</footer>
    </body>
</html>:.

Avec [GetBlogMetadataIfExists](.:GetChapterAttributeByIndex::path::4.4.2:.#getblogmetadataifexists) on test ici si une image
de chargement a bien été définit dans le fichier de configuration principal. Si tel est le cas alors la balise __img__ est ajouté.

Notez que l'attribut id a pour valeur __.:DisableMarkup::__VENC_LOADING__:.__. Cela permet au module JS de retrouver l'élément
à afficher ou à cacher selon que la page est en cours de chargement.

Enfiin remarquons ligne 3 :

.:CodeHighlight::Text::False::src=.:Escape::".:GetRelativeRoot:.{value}":. :.

Ici la variable __value__ portera le nom de fichier contenu dans __loading_image_
si ce champ est définit dans votre fichier de configuration.

Enfin, comme souvent avec VenC quand on référence une ressource dans un
fichier HTML, on utilise le motif [GetRelativeRoot](.:GetChapterAttributeByIndex::path::4.3:.#getrelativeroot)
qui permet de construire le chemin relatif du fichier qu'on référence.
