authors: 'Denis Salem'
categories: ''
tags: ''
chapter: 5.1.2
title: Accesseurs globaux
---VENC-BEGIN-PREVIEW---
---VENC-END-PREVIEW---

Ces motifs sont disponibles quelque soit le contexte et
sont définis dans blog_configuration.yaml.

## .:Escape:: .:GetAuthorName:. ::EndEscape:.
Retourne le nom de l'auteur du blog.

## .:Escape:: .:GetBlogName:. ::EndEscape:.
Retourne le titre du blog.

## .:Escape:: .:GetBlogDescription:. ::EndEscape:.
Retourne la description du blog.

## .:Escape:: .:GetBlogKeywords:. ::EndEscape:.
Retourne les mots clefs décrivant le blog.

## .:Escape:: .:GetAuthorDescription:. ::EndEscape:.
Retourne la description de l'auteur du blog.

## .:Escape:: .:GetBlogLicense:. ::EndEscape:.
Retourne la licence appliquée au contenu du blog.

## .:Escape:: .:GetBlogURL:. ::EndEscape:.
Retourne l'URL du blog.

## .:Escape:: .:GetBlogLanguage:. ::EndEscape:.
Retourne le language du blog.

## .:Escape:: .:GetAuthorEmail:. ::EndEscape:.
Retourne l'adresse email de l'auteur du blog.

##  .:Escape:: .:GetBlogMetadata::variable_name:. ::EndEscape:.

Vous pouvez également définir vos propres variables en rajoutant des
champs au fichier de configuration blog_configuration.yaml. Par exemple
en rajoutant la ligne

> Banner: 'maBanniere.jpg'

dans le fichier de configuration, vous pourrez ensuite récupérer la valeurs de Banner avec

> .:Escape:: .:GetBlogMetadata::Banner:. ::EndEscape:.

Comme pour __GetEntryMetadata__, si la variable référencée n'existe pas,
VenC générera une erreur et vous en indiquera l'origine.

## .:Escape:: .:GetBlogMetadataIfExists::variable_name[::string]:. ::EndEscape:.

De façon similaire, il est possible d'essayer d'accéder à une variable,
sans garantie que celle-ci existe. Si la variable existe, il est possible
alors de formater du texte pour y inclure notre variable.

Le formatage du texte se fait en utilisant des variables contextuelles propre à la fonction:

- __{value}__ : La valeur de la variable qu'on référence.
- __{relative_origin}__ : Le chemin relatif de la racine du blog.

Un cas d'usage typique serait d'ajouter un bouton de réseau social si
l'utilisateur définit un compte dans son fichier de configuration:

.:CodeHighlightInclude::html::False::GetBlogMetadataIfExists_example:.

Dans cet example, on suppose que l'image de l'icone du réseau social se trouve à la
racine du blog, on a donc besoin de préciser son chemin relatif avec la
variable contextuelle {relative_origin}.

Si la variable référencée n'est pas définit VenC ignore le motif et le supprime.

Si le second argument n'est pas définit l'accesseur renvoie directement la variable référencée, si elle existe.

## .:Escape:: .:ForBlogArchives::string::separator:. ::EndEscape:.

Ce motif permet de récuper la listes des périodes archivées. Le format de la période de temps
est définit dans le fichier de configuration
principal par le champ __archives&#95;directory&#95;name__.

- Le premier argument __string__ contient le texte à formater pour chaque élément de la liste de période.
- Le second argument __separator__ contient le texte utilisé comme séparateur.

Les variables contextuelles de la fonction sont les suivantes:

- __{value}__ : La période courante, tel que définit par __archives&#95;directory&#95;name__ dans le fichier de configuration principal du blog.
- __{path}__ : Le chemin relatif la période archivée.
- __{count}__ : Le nombre de publication dans la période courante.
- __{weight}__ : Le nombre de publication dans la période courange divisé
par le nombre maximal de publication par période.

Si la génération des archives est désactivé, le motif est ignoré et supprimé.
