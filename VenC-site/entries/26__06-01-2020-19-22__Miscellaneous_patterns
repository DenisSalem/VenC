authors:
- Denis Salem
categories:
- ''
chapter: 5.4
tags:
- ''
title: Motifs divers
---VENC-BEGIN-PREVIEW---
---VENC-END-PREVIEW---

.:GetEntryToC::<ul>::<li>::{id} {level} {title}::</li>::/ul>:.

## .:Escape:: .:GetRandomNumber::min::max::precision:. :.

Génère un nombre aléatoire compris entre __min__ et __max__ avec une précision
décimale définit par __precision__.

Par exemple, pour générer un nombre décimal compris entre zéro inclus et dix, avec au plus quatre
chiffres après la virgule nous pouvons utiliser :

> .&colon;GetRandomNumber::0::10::4&colon;.

Pour générer un nombre entier compris entre zero inclus et cent nous pouvons utiliser :

> .&colon;GetRandomNumber::0::100::0&colon;.

Enfin pour générer un nombre décimal, par exemple entre 12.25 inclus et 12.5,
avec au plus 5 chiffres après la virgules, nous pouvons utiliser :

>  .&colon;GetRandomNumber::12.25::12.5::5&colon;.

## .:Escape:: .:GetGenerationTimestamp::date&#95;format:. :.

Ce motif renvoie la date formatée à laquelle la page courante a été générée.

Le seul paramètre de ce motif est :

- __date&#95;format__ : La chaîne de caractères permettant de formater
la date courante. Le format utilisé est le même que celui utilisé par Python.
La documentation est disponible [ici](https://strftime.org/).

## .:Escape:: .:GetVenCVersion:. :.

Ce motif retourne la version de VenC avec laquelle la page
courante est générée et il ne prend pas de paramètre.

## .:Escape:: .:IncludeFile::filename[::arg1][::arg2][...]:. :.

Ce motif permet d'inclure le contenu d'un fichier dans la publication courante. Celui-ci ne
doit comporter que des caractères imprimables.

Ce motif prend au minimum un argument :

- __filename__ : le chemin du fichier à inclure dans la page. Celui-ci
doit se trouver dans le répertoire __includes__ de votre projet.
- __arg1__, __arg2__, __...__ : ces paramètres sont optionnels.
Il vous permettent de formater l'intérieur du fichier à inclure en remplaçant
des variables numérotés (venc&#95;arg&#95;1, venc&#95;arg&#95;2, venc&#95;arg&#95;n)
qui s'y trouverait par la valeur de chacun des paramètres correspondant.

### Un premier exemple

Avec un fichier contenant plein de trucs longs et compliqués
que nous appellerons :

> plein-de-truc-longs-et-compliqués.txt

Et qui se trouverait dans le répertoire __includes__ de votre projet.
Nous utiliserions alors le motif comme suit :

> .&colon;IncludeFile::plein-de-truc-longs-et-compliqués.txt&colon;.

Notons que tout ce qui se trouve à l'intérieur du fichier ainsi inclus n'est
pas traité par les interpréteurs de langage balisé tier ou celui interne à VenC.

### Un second exemple

Nous utiliserons les paramètres optionnels pour formater le contenu
du fichier à inclure.

Soit le fichier :

> liste&#95;de&#95;choses&#95;à&#95;faire.txt

Qui contiendrait :

.:CodeHighlight::Text::False::
Voilà les choses qu'il faut que je fasse avant de mourrir
 - {venc_arg_1}
 - {venc_arg_2}
 - {venc_arg_3}
 - {venc_arg_4}
:.

En utilisant le motif __IncludeFile__ comme suit :

    .:Escape:: .:IncludeFile::liste_de_choses_à_faire.txt::
    Libérer la Corée du Nord::
    Terraformer la lune::
    Découvrir la matière exotique et commercialiser les trous de ver pour le voyage interstellaire::
    Nourrir Tacos, mon chien.
    :. ::EndEscape:.
    
Nous obtiendrions :

.:CodeHighlight::Text::False::
.:IncludeFile::things_to_do.txt::
Libérer la Corée du Nord::
Terraformer la lune::
Découvrir la matière exotique et commercialiser les trous de ver pour le voyage interstellaire::
Nourrir Tacos, mon chien:. :.

La portion de texte ci-dessus serait incluse telle quelle dans la page générée par VenC.
Là encore, ni les motifs VenC, ni le langage de balisage courant ne sont interprétés.

## .:Escape:: .:IncludeFileIfExists::filename[::arg1][::arg2][...]:. :.

Comme __IncludeFile__ mais ne produit pas d'erreur et retourne une chaine vide si le fichier n'existe pas.

## .:Escape:: .:DisableMarkup::content:. :.

Ce motif permet de désactiver l'interpréteur de langage de balisage
pour le texte passé en paramètre. Attention cependant, VenC reconnaît
toujours ses propres motifs (ils sont documentés dans le chapitre 5 de ce manuel).

Ce motif ne prend qu'un seul paramètre.

- __content__ : le texte pour lequel on veut désactiver l'interpréteur de langage de balisage.

## .:Escape:: .:Escape::content:. :.

Il permet d'ignorer les motifs contenus à l'intérieur du texte de l'unique argument __content__.

Ce pattern spécial est historique est sert pour la génération de la documentation. Vous n'en avez normalement pas besoin.

## .:Escape:: .:GetJSON-LD:. :.

Retourne le document JSON-LD, s'il existe, associé à la première page du fil de publication courant.

Par exemple, si l'on est sur la première page d'une catégorie quelconque, le motif renvoie :

.:CodeHighlight::html::False::<script type="application/ld+json" src="categories.jsonld"></script>:.
