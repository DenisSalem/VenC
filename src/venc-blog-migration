#! /usr/bin/python3

import os
import yaml
import codecs

from VenC.helpers import Die
from VenC.helpers import Notify
from VenC.datastore.entry import YieldEntriesContent
from VenC.l10n import Messages

def toCamelCase(name):
    chunks = name.split('_')
    if len(chunks) == 1:
        return name

    output = chunks[0].lower()
    
    for word in chunks[1:]:
        output += word.title()

    return output

''' Processing blog configuration '''

if not "blogConfiguration.yaml" in os.listdir():
    try:
        blog_configuration = yaml.load(open(os.getcwd()+"/blog_configuration.yaml",'r').read())

    except FileNotFoundError:
        Die(Messages.noBlogConfiguration)

    except PermissionError:
        Die(Messages.noBlogConfiguration)
        
    except yaml.scanner.ScannerError:
        Die(Messages.possibleMalformedBlogConfiguration)

    blogConfiguration = dict()
    for rootkey in blog_configuration:
        if rootkey != "path":
            blogConfiguration[ toCamelCase(rootkey) ] = blog_configuration[rootkey]
        else:
            blogConfiguration["path"] = dict()
            for pathkey in blog_configuration["path"]:
                blogConfiguration["path"][ toCamelCase(pathkey) ] = blog_configuration["path"][pathkey]

    stream = codecs.open('blogConfiguration.yaml', 'w',encoding="utf-8")
    yaml.dump(blogConfiguration, stream, default_flow_style=False, allow_unicode=True)

''' Processing entries '''

for entryFilename in YieldEntriesContent():
    rawData = open(os.getcwd()+"/entries/"+entryFilename,'r').read()
    try:
        metadata = yaml.load(rawData.split("---\n")[0])
        metadata["title"] = metadata.pop("entry_name")
        output = yaml.dump(metadata, default_flow_style=False, allow_unicode=True) + "---\n"

    except yaml.scanner.ScannerError:
        Die(Messages.possibleMalformedEntry.format(entryFilename))

    except KeyError:
        if not "title" in metadata.keys():
            Die(Messages.possibleMalformedEntry.format(entryFilename))

    try:
        output += rawData.split("---\n")[1]
    
    except IndexError:
        Notify(Messages.emptyEntry.format(entryFilename), "YELLOW")
    
    stream = codecs.open("entries/"+entryFilename,'w',encoding="utf-8")
    stream.write(output)
        

''' Cleaning '''
try:
    os.remove('blog_configuration.yaml')

except:
    pass
